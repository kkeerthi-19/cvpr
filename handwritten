import matplotlib.pyplot as plt
from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report

# Load dataset and split
digits = load_digits()
X_train, X_test, y_train, y_test = train_test_split(digits.data, digits.target, test_size=0.2, random_state=42)

# Train Naive Bayes and predict
gnb = GaussianNB().fit(X_train, y_train)
y_pred = gnb.predict(X_test)

# Print results
print(f"Accuracy: {accuracy_score(y_test, y_pred) * 100:.2f}%\n")
print(classification_report(y_test, y_pred))

# Plot predictions
fig, axes = plt.subplots(4, 4, figsize=(8, 8))
fig.suptitle("Naive Bayes - Digit Predictions", fontsize=16)
for i, ax in enumerate(axes.flat):
    ax.imshow(X_test[i].reshape(8, 8), cmap='gray')
    ax.set_title(f"P: {y_pred[i]} | A: {y_test[i]}", fontsize=10)
    ax.axis('off')
plt.tight_layout()
plt.subplots_adjust(top=0.9)
plt.show()
